import os

from omegaconf import MISSING
from GBC.utils.base.config_class import configclass

PROJECT_ROOT_DIR = os.path.join(os.path.dirname(os.path.abspath(__file__)), "..", "..", "..")


@configclass
class DataPathsCfg:
    root_path: str = PROJECT_ROOT_DIR

    dataset_path: str = MISSING
    # The following datasets are not generated by these scripts, (generally) put under the dataset directory
    # And the following attributes are only relative path to dataset_path unless otherwise specified
    list_add_dataset_path: list[str] = MISSING
    urdf_path: str = MISSING
    smplh_model_path: str = MISSING
    dmpls_model_path: str = MISSING
    amass_dataset_path: str = MISSING

    extra_accad_path: str = MISSING

    # The following results are generated by these scripts, so relative paths to the PROJECT_ROOT_DIR are shown
    list_add_root_path: list[str] = MISSING
    smplh_fit_result_path: str = MISSING
    pose_transformer_path: str = MISSING
    converted_actions_path: str = MISSING
    ref_data_path: list[str] = []

    def __post_init__(self):
        # Add prefix to their paths except absolute ones
        for list_add_attr in dir(self):
            if list_add_attr[:9] != "list_add_":
                continue
            prefix_attr = list_add_attr[9:]
            if not hasattr(self, prefix_attr):
                continue
            # Get prefix and attributes that need to be added with the prefix
            prefix = getattr(self, prefix_attr)
            attrs = getattr(self, list_add_attr)
            for attr in attrs:
                path = getattr(self, f"{attr}_path")
                if isinstance(path, list):
                    path = list(map(lambda x: self.__add_prefix(x, prefix), path))
                else:
                    path = self.__add_prefix(path, prefix)
                setattr(self, f"{attr}_path", path)

    def __add_prefix(self, path, prefix):
        return path if os.path.isabs(path) else os.path.join(prefix, path)



DATA_PATHS = DataPathsCfg(
    dataset_path=MISSING,
)